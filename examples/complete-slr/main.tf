module "all" {
  source = "../../"
  # creating all of slr
  service_linked_role_with_service_names = [
    "ack_one",
    "actiontrail",
    #    "alikafka",
    "alidns",
    "adb",
    "gpdb",
    "ddos_bgp",
    "api_gateway",
    "alb",
    #    "arms",
    "imp",
    "auto_scaling",
    "bastion_host",
    "bss_open_api",
    "cdn",
    "chatbot",
    "slb",
    "click_house",
    "config",
    "dbaudit",
    "cen",
    "cms",
    "clous_sso",
    "compute_nest",
    "container_registry",
    "das",
    "dcdn",
    "dms",
    "sddp",
    "data_works",
    "dbs",
    "dbfs",
    "datahub",
    "emr",
    "ebs",
    "ecs",
    "ens",
    "eflo",
    "eais",
    "eci",
    "ehpc",
    "elasticsearch",
    "event_bridge",
    "fc",
    "ga",
    "hbase",
    "hologres",
    "hbr",
    "iot",
    "kms",
    "lindorm",
    "sls",
    "maxcompute",
    "mse",
    "mongodb",
    "nat_gateway",
    "nas",
    "nlb",
    "ocean_base",
    "open_search",
    "oos",
    "polardb",
    "private_link",
    "private_zone",
    "quick_bi",
    "rds",
    "ros",
    "rabbitmq",
    "redis",
    "resource_manager",
    "rocketmq",
    "ssl_certificate",
    "sae",
    "service_catelog",
    "service_mesh",
    "tag",
    "ots",
    "vpn",
    "waf"
  ]
  // alikafka's linked roles using role name to launch
  service_linked_role_with_role_names = [
    "AliyunServiceRoleForAlikafkaConnector",
    "AliyunServiceRoleForAlikafkaInstanceEncryption",
    "AliyunServiceRoleForAlikafka",
    "AliyunServiceRoleForAlikafkaETL"
  ]
  // arms's linked roles using service id to launch
  service_linked_role_with_service_ids = [
    "arms.aliyuncs.com",
    "security.arms.aliyuncs.com"
  ]
  // the following slr can not be deleted and skip them when testing
  exclude_service_linked_role_with_role_names = [
    "AliyunServiceRoleForApiGateway",
    "AliyunServiceRoleForApiGatewayConnectUserVpc",
    "AliyunServiceRoleForApiGatewayIntegrateWithMicroservices",
    "AliyunServiceRoleForApiGatewayMonitoring",
    "AliyunServiceRoleForApigatewayPutEventsToEventBridge",
    "AliyunServiceRoleForBssOpenApi",
    "AliyunServiceRoleForCDNLogDelivery",
    "AliyunServiceRoleForDCDNLogDelivery",
    "AliyunServiceRoleForECSArchiving",
    "AliyunServiceRoleForEHPCManagedNetwork",
    "AliyunServiceRoleForEfloCnp",
    "AliyunServiceRoleForEfloVcc",
    "AliyunServiceRoleForElasticsearch",
    "AliyunServiceRoleForFC",
    "AliyunServiceRoleForIoTCloudSource",
    "AliyunServiceRoleForKMSKeyStore",
    "AliyunServiceRoleForKMSSecretsManagerForECS",
    "AliyunServiceRoleForKMSSecretsManagerForRDS",
    "AliyunServiceRoleForNasLogDelivery",
    "AliyunServiceRoleForOTSDataDelivery",
    "AliyunServiceRoleForOceanBaseEncryption",
    "AliyunServiceRoleForOceanBaseSecurityGroup",
    "AliyunServiceRoleForOceanBaseTenantInstance",
    "AliyunServiceRoleForOceanbaseMigrationAssessment",
    "AliyunServiceRoleForRds",
    "AliyunServiceRoleForRdsMyBaseProprietary",
    "AliyunServiceRoleForSLSAlert",
    "AliyunServiceRoleForSearchEngine",
    "AliyunServiceRolePolicyForImp",
    // the following slr created by enable module
    "AliyunServiceRoleForCEN",
    "AliyunServiceRoleForPrivatelink",
    "AliyunServiceRoleForSLSAudit"
  ]
}